basePath: /api/v1
definitions:
  model.AcceptDocument:
    properties:
      id:
        items:
          type: integer
        type: array
    type: object
  model.DeliveryStatus:
    enum:
    - SUCCESS
    - PENDING
    - ERROR
    type: string
    x-enum-varnames:
    - DeliveryStatusSuccess
    - DeliveryStatusPending
    - DeliveryStatusError
  model.Document:
    properties:
      acceptID:
        type: integer
      createdAt:
        type: string
      deliveryStatus:
        $ref: '#/definitions/model.DeliveryStatus'
      files:
        items:
          $ref: '#/definitions/model.File'
        type: array
      id:
        type: integer
      owner:
        type: string
      payload:
        type: string
      receivedTime:
        type: string
      sentTime:
        type: string
      status:
        $ref: '#/definitions/model.Status'
      title:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.File:
    properties:
      documentID:
        description: Внешний ключ для связи с Document
        type: integer
      id:
        type: integer
      path:
        type: string
    type: object
  model.Status:
    enum:
    - DELETED
    - DRAFT
    - FORMED
    type: string
    x-enum-varnames:
    - StatusDeleted
    - StatusDraft
    - StatusFormed
host: http://localhost:8081
info:
  contact: {}
  description: API server for Mars application
  title: AtomHackMarsBackend RestAPI
  version: "1.0"
paths:
  /document/:
    post:
      consumes:
      - application/json
      description: Принимает новый документ с параметрами id, title, owner, createdAt,
        payload и files.
      parameters:
      - description: ID документа
        in: query
        name: id
        required: true
        type: integer
      - description: Заголовок документа
        in: query
        name: title
        required: true
        type: string
      - description: Владелец документа
        in: query
        name: owner
        required: true
        type: string
      - description: Дата и время создания документа в формате RFC3339
        in: query
        name: createdAt
        required: true
        type: string
      - description: Payload документа
        in: query
        name: payload
        required: true
        type: string
      - description: Файлы, прикрепленные к документу
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/model.AcceptDocument'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Принимает новый документ.
      tags:
      - Документы
  /document/{docID}:
    get:
      consumes:
      - application/json
      description: Получает документ из репозитория по указанному ID.
      parameters:
      - description: ID документа
        in: path
        name: docID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/model.Document'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получает документ по ID.
      tags:
      - Документы
  /document/formed:
    get:
      consumes:
      - application/json
      description: Возвращает список сформированных документов с учетом параметров
        page и pageSize.
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Размер страницы
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            items:
              $ref: '#/definitions/model.Document'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Возвращает сформированные документы.
      tags:
      - Документы
swagger: "2.0"
